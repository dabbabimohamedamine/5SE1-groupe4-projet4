version: "3.8"

services:
  mysqldb:
    image: mysql:8.0.3
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=YES  # Mot de passe du root MySQL
      - MYSQL_DATABASE=db        # Nom de la base de données à créer
    ports:
      - 3306:3306  # Expose le port 3306 de MySQL sur le port 3306 de l'hôte
    volumes:
      - db:/var/lib/mysql  # Utilise un volume pour stocker les données de la base
    networks:
      - app-network

  devops-back:
    depends_on:
      - mysqldb  # Assure que mysqldb est lancé avant devops-back
    image: oudaybenmessaoud/ouday-5se1-g4-projet4:latest  # Image Docker pour votre application Spring Boot
    restart: on-failure
    ports:
      - 8082:8082  # Expose le port 8082 pour l'application Spring Boot
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/db?createDatabaseIfNotExist=true",
        "spring.datasource.username" : "root",
        "spring.datasource.password" : "YES",  # Assurez-vous que le mot de passe correspond à celui du fichier Docker Compose
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    stdin_open: true
    tty: true
    networks:
      - app-network

volumes:
  db:  # Crée un volume Docker pour la base de données MySQL

networks:
  app-network:  # Crée un réseau Docker privé pour que les services puissent communiquer entre eux
    driver: bridge
